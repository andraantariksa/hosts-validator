name: ci
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, win-msvc]
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
          - build: macos
            os: macOS-latest
            rust: stable
          - build: win-msvc
            os: windows-latest
            rust: stable
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal
      - name: Build release
        run: cargo build --release --verbose
      - name: Upload artefact
        if: ${{ matrix.os == 'windows-2019' }}
        uses: actions/upload-artifact@v1
        with:
          name: hosts-validator-windows
          path: target/release/hosts-validator.exe
      - name: Upload artefact
        if: ${{ matrix.os == 'macOS-10.14' }}
        uses: actions/upload-artifact@v1
        with:
          name: hosts-validator-macos
          path: target/release/hosts-validator
      - name: Upload artefact
        if: ${{ matrix.os == 'ubuntu-18.04' }}
        uses: actions/upload-artifact@v1
        with:
          name: hosts-validator-linux
          path: target/release/hosts-validator

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Release artifact
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*"
          token: ${{ secrets.GITHUB_ACCESS_TOKEN }}

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt
      - name: Check formatting
        run: |
          cargo fmt -- --check
